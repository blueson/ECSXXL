//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FightEntity {

    public MoveToTargetListenerComponent moveToTargetListener { get { return (MoveToTargetListenerComponent)GetComponent(FightComponentsLookup.MoveToTargetListener); } }
    public bool hasMoveToTargetListener { get { return HasComponent(FightComponentsLookup.MoveToTargetListener); } }

    public void AddMoveToTargetListener(System.Collections.Generic.List<IMoveToTargetListener> newValue) {
        var index = FightComponentsLookup.MoveToTargetListener;
        var component = (MoveToTargetListenerComponent)CreateComponent(index, typeof(MoveToTargetListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMoveToTargetListener(System.Collections.Generic.List<IMoveToTargetListener> newValue) {
        var index = FightComponentsLookup.MoveToTargetListener;
        var component = (MoveToTargetListenerComponent)CreateComponent(index, typeof(MoveToTargetListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveToTargetListener() {
        RemoveComponent(FightComponentsLookup.MoveToTargetListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class FightMatcher {

    static Entitas.IMatcher<FightEntity> _matcherMoveToTargetListener;

    public static Entitas.IMatcher<FightEntity> MoveToTargetListener {
        get {
            if (_matcherMoveToTargetListener == null) {
                var matcher = (Entitas.Matcher<FightEntity>)Entitas.Matcher<FightEntity>.AllOf(FightComponentsLookup.MoveToTargetListener);
                matcher.componentNames = FightComponentsLookup.componentNames;
                _matcherMoveToTargetListener = matcher;
            }

            return _matcherMoveToTargetListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FightEntity {

    public void AddMoveToTargetListener(IMoveToTargetListener value) {
        var listeners = hasMoveToTargetListener
            ? moveToTargetListener.value
            : new System.Collections.Generic.List<IMoveToTargetListener>();
        listeners.Add(value);
        ReplaceMoveToTargetListener(listeners);
    }

    public void RemoveMoveToTargetListener(IMoveToTargetListener value, bool removeComponentWhenEmpty = true) {
        var listeners = moveToTargetListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMoveToTargetListener();
        } else {
            ReplaceMoveToTargetListener(listeners);
        }
    }
}
