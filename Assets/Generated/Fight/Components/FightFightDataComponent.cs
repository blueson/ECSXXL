//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FightContext {

    public FightEntity fightDataEntity { get { return GetGroup(FightMatcher.FightData).GetSingleEntity(); } }
    public FightData fightData { get { return fightDataEntity.fightData; } }
    public bool hasFightData { get { return fightDataEntity != null; } }

    public FightEntity SetFightData(int newHeroCount, int newEnemyCount) {
        if (hasFightData) {
            throw new Entitas.EntitasException("Could not set FightData!\n" + this + " already has an entity with FightData!",
                "You should check if the context already has a fightDataEntity before setting it or use context.ReplaceFightData().");
        }
        var entity = CreateEntity();
        entity.AddFightData(newHeroCount, newEnemyCount);
        return entity;
    }

    public void ReplaceFightData(int newHeroCount, int newEnemyCount) {
        var entity = fightDataEntity;
        if (entity == null) {
            entity = SetFightData(newHeroCount, newEnemyCount);
        } else {
            entity.ReplaceFightData(newHeroCount, newEnemyCount);
        }
    }

    public void RemoveFightData() {
        fightDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FightEntity {

    public FightData fightData { get { return (FightData)GetComponent(FightComponentsLookup.FightData); } }
    public bool hasFightData { get { return HasComponent(FightComponentsLookup.FightData); } }

    public void AddFightData(int newHeroCount, int newEnemyCount) {
        var index = FightComponentsLookup.FightData;
        var component = (FightData)CreateComponent(index, typeof(FightData));
        component.heroCount = newHeroCount;
        component.enemyCount = newEnemyCount;
        AddComponent(index, component);
    }

    public void ReplaceFightData(int newHeroCount, int newEnemyCount) {
        var index = FightComponentsLookup.FightData;
        var component = (FightData)CreateComponent(index, typeof(FightData));
        component.heroCount = newHeroCount;
        component.enemyCount = newEnemyCount;
        ReplaceComponent(index, component);
    }

    public void RemoveFightData() {
        RemoveComponent(FightComponentsLookup.FightData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class FightMatcher {

    static Entitas.IMatcher<FightEntity> _matcherFightData;

    public static Entitas.IMatcher<FightEntity> FightData {
        get {
            if (_matcherFightData == null) {
                var matcher = (Entitas.Matcher<FightEntity>)Entitas.Matcher<FightEntity>.AllOf(FightComponentsLookup.FightData);
                matcher.componentNames = FightComponentsLookup.componentNames;
                _matcherFightData = matcher;
            }

            return _matcherFightData;
        }
    }
}
